/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/core.scss":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/core.scss ***!
  \***********************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --fg-color: #444;\n  --bg-color: #eee;\n}\n\nbody {\n  font-size: 20px;\n  background: var(--bg-color);\n  color: var(--fg-color);\n  font-family: Uruz;\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n}\nfooter {\n  position: fixed;\n  width: calc(100vw - 20px);\n  height: 150px;\n  bottom: 0;\n}\n\nbutton {\n  font-family: Uruz;\n}\nbutton.icon {\n  font-family: Icon;\n  font-variation-settings: \"wght\" 200;\n  width: 30px;\n  height: 30px;\n}\n\nlabel.radio {\n  position: relative;\n  cursor: pointer;\n  display: inline-flex;\n}\nlabel.radio span {\n  padding: 3px;\n}\nlabel.radio .border {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\nlabel.radio input[type=radio i] {\n  display: none;\n}\nlabel.radio input[type=radio i]:checked {\n  background: var(--fg-color);\n}\nlabel.radio input[type=radio i]:checked ~ span {\n  background-color: var(--fg-color);\n  color: var(--bg-color);\n}", "",{"version":3,"sources":["webpack://./src/styles/core.scss"],"names":[],"mappings":"AAAA;EACE,gBAAA;EACA,gBAAA;AACF;;AACA;EACE,eAAA;EACA,2BAAA;EACA,sBAAA;EACA,iBAAA;AAEF;;AACA;EACE,aAAA;EACA,sBAAA;AAEF;AAeA;EACE,eAAA;EACA,yBAAA;EACA,aAAA;EACA,SAAA;AAbF;;AAgBA;EACE,iBAAA;AAbF;AAcE;EACE,iBAAA;EACA,mCAAA;EACA,WAAA;EACA,YAAA;AAZJ;;AAgBA;EACE,kBAAA;EACA,eAAA;EACA,oBAAA;AAbF;AAcE;EACE,YAAA;AAZJ;AAcE;EACE,kBAAA;EACA,MAAA;EACA,QAAA;EACA,SAAA;EACA,OAAA;AAZJ;AAcE;EACE,aAAA;AAZJ;AAaI;EACE,2BAAA;AAXN;AAYM;EACE,iCAAA;EACA,sBAAA;AAVR","sourcesContent":[":root {\n  --fg-color: #444;\n  --bg-color: #eee;\n}\nbody {\n  font-size: 20px;\n  background: var(--bg-color);\n  color: var(--fg-color);\n  font-family: Uruz;\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n  &#order-list {\n    #overview {\n      h2 {\n\n      }\n    }\n    #content {\n      section {\n        ~ section {\n\n        }\n      }\n    }\n  }\n}\n\nfooter {\n  position: fixed;\n  width: calc(100vw - 20px);\n  height: 150px;\n  bottom: 0;\n}\n\nbutton {\n  font-family: Uruz;\n  &.icon { \n    font-family: Icon;\n    font-variation-settings: 'wght' 200;\n    width: 30px;\n    height: 30px;\n  }\n}\n\nlabel.radio {\n  position: relative;\n  cursor: pointer;\n  display: inline-flex;\n  span {\n    padding: 3px;\n  }\n  .border {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;  \n  }\n  input[type='radio' i] {\n    display: none;\n    &:checked {\n      background: var(--fg-color);\n      ~ span {\n        background-color: var(--fg-color);        \n        color: var(--bg-color);        \n      }\n    }\n  }\n\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/font-face.scss":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/font-face.scss ***!
  \****************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _fonts_Theia0_2_100_woff__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fonts/Theia0.2-100.woff */ "./src/fonts/Theia0.2-100.woff");
/* harmony import */ var _fonts_Theia0_2_100_woff2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fonts/Theia0.2-100.woff2 */ "./src/fonts/Theia0.2-100.woff2");
/* harmony import */ var _fonts_Theia0_2_200_woff__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fonts/Theia0.2-200.woff */ "./src/fonts/Theia0.2-200.woff");
/* harmony import */ var _fonts_Theia0_2_200_woff2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../fonts/Theia0.2-200.woff2 */ "./src/fonts/Theia0.2-200.woff2");
/* harmony import */ var _fonts_Theia0_2_300_woff__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../fonts/Theia0.2-300.woff */ "./src/fonts/Theia0.2-300.woff");
/* harmony import */ var _fonts_Theia0_2_300_woff2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../fonts/Theia0.2-300.woff2 */ "./src/fonts/Theia0.2-300.woff2");
/* harmony import */ var _fonts_Theia0_2_400_woff__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../fonts/Theia0.2-400.woff */ "./src/fonts/Theia0.2-400.woff");
/* harmony import */ var _fonts_Theia0_2_400_woff2__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../fonts/Theia0.2-400.woff2 */ "./src/fonts/Theia0.2-400.woff2");
/* harmony import */ var _fonts_Theia0_2_500_woff__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../fonts/Theia0.2-500.woff */ "./src/fonts/Theia0.2-500.woff");
/* harmony import */ var _fonts_Theia0_2_500_woff2__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../fonts/Theia0.2-500.woff2 */ "./src/fonts/Theia0.2-500.woff2");
/* harmony import */ var _fonts_Ergata_Ymirsson400_woff__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../fonts/Ergata-Ymirsson400.woff */ "./src/fonts/Ergata-Ymirsson400.woff");
/* harmony import */ var _fonts_Ergata_Ymirsson500_woff__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../fonts/Ergata-Ymirsson500.woff */ "./src/fonts/Ergata-Ymirsson500.woff");
/* harmony import */ var _fonts_Ergata_Ymirsson600_woff__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../fonts/Ergata-Ymirsson600.woff */ "./src/fonts/Ergata-Ymirsson600.woff");
/* harmony import */ var _fonts_Ergata_Ymirsson700_woff__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../fonts/Ergata-Ymirsson700.woff */ "./src/fonts/Ergata-Ymirsson700.woff");
/* harmony import */ var _fonts_Ergata_Ymirsson400C_woff__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../fonts/Ergata-Ymirsson400C.woff */ "./src/fonts/Ergata-Ymirsson400C.woff");
/* harmony import */ var _fonts_Ergata_Ymirsson500C_woff__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../fonts/Ergata-Ymirsson500C.woff */ "./src/fonts/Ergata-Ymirsson500C.woff");
/* harmony import */ var _fonts_Ergata_Ymirsson600C_woff__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../fonts/Ergata-Ymirsson600C.woff */ "./src/fonts/Ergata-Ymirsson600C.woff");
/* harmony import */ var _fonts_ManufabGX_woff__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../fonts/ManufabGX.woff */ "./src/fonts/ManufabGX.woff");
/* harmony import */ var _fonts_ManufabGX_woff2__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../fonts/ManufabGX.woff2 */ "./src/fonts/ManufabGX.woff2");
/* harmony import */ var _fonts_IconGX_woff__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../fonts/IconGX.woff */ "./src/fonts/IconGX.woff");
/* harmony import */ var _fonts_IconGX_woff2__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../fonts/IconGX.woff2 */ "./src/fonts/IconGX.woff2");
// Imports
























var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_100_woff__WEBPACK_IMPORTED_MODULE_3__.default);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_100_woff2__WEBPACK_IMPORTED_MODULE_4__.default);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_200_woff__WEBPACK_IMPORTED_MODULE_5__.default);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_200_woff2__WEBPACK_IMPORTED_MODULE_6__.default);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_300_woff__WEBPACK_IMPORTED_MODULE_7__.default);
var ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_300_woff2__WEBPACK_IMPORTED_MODULE_8__.default);
var ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_400_woff__WEBPACK_IMPORTED_MODULE_9__.default);
var ___CSS_LOADER_URL_REPLACEMENT_7___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_400_woff2__WEBPACK_IMPORTED_MODULE_10__.default);
var ___CSS_LOADER_URL_REPLACEMENT_8___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_500_woff__WEBPACK_IMPORTED_MODULE_11__.default);
var ___CSS_LOADER_URL_REPLACEMENT_9___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Theia0_2_500_woff2__WEBPACK_IMPORTED_MODULE_12__.default);
var ___CSS_LOADER_URL_REPLACEMENT_10___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Ergata_Ymirsson400_woff__WEBPACK_IMPORTED_MODULE_13__.default);
var ___CSS_LOADER_URL_REPLACEMENT_11___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Ergata_Ymirsson500_woff__WEBPACK_IMPORTED_MODULE_14__.default);
var ___CSS_LOADER_URL_REPLACEMENT_12___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Ergata_Ymirsson600_woff__WEBPACK_IMPORTED_MODULE_15__.default);
var ___CSS_LOADER_URL_REPLACEMENT_13___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Ergata_Ymirsson700_woff__WEBPACK_IMPORTED_MODULE_16__.default);
var ___CSS_LOADER_URL_REPLACEMENT_14___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Ergata_Ymirsson400C_woff__WEBPACK_IMPORTED_MODULE_17__.default);
var ___CSS_LOADER_URL_REPLACEMENT_15___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Ergata_Ymirsson500C_woff__WEBPACK_IMPORTED_MODULE_18__.default);
var ___CSS_LOADER_URL_REPLACEMENT_16___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_Ergata_Ymirsson600C_woff__WEBPACK_IMPORTED_MODULE_19__.default);
var ___CSS_LOADER_URL_REPLACEMENT_17___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_ManufabGX_woff__WEBPACK_IMPORTED_MODULE_20__.default);
var ___CSS_LOADER_URL_REPLACEMENT_18___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_ManufabGX_woff2__WEBPACK_IMPORTED_MODULE_21__.default);
var ___CSS_LOADER_URL_REPLACEMENT_19___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_IconGX_woff__WEBPACK_IMPORTED_MODULE_22__.default);
var ___CSS_LOADER_URL_REPLACEMENT_20___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_IconGX_woff2__WEBPACK_IMPORTED_MODULE_23__.default);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@font-face {\n  font-family: \"Theia\";\n  font-weight: 100;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ") format(\"woff\");\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\"woff2\");\n}\n@font-face {\n  font-family: \"Theia\";\n  font-weight: 200;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\"woff\");\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\"woff2\");\n}\n@font-face {\n  font-family: \"Theia\";\n  font-weight: 300;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\"woff\");\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_5___ + ") format(\"woff2\");\n}\n@font-face {\n  font-family: \"Theia\";\n  font-weight: 400;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_6___ + ") format(\"woff\");\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_7___ + ") format(\"woff2\");\n}\n@font-face {\n  font-family: \"Theia\";\n  font-weight: 500;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_8___ + ") format(\"woff\");\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_9___ + ") format(\"woff2\");\n}\n@font-face {\n  font-family: \"Uruz\";\n  font-weight: 400;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_10___ + ") format(\"woff\");\n}\n@font-face {\n  font-family: \"Uruz\";\n  font-weight: 500;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_11___ + ") format(\"woff\");\n}\n@font-face {\n  font-family: \"Uruz\";\n  font-weight: 600;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_12___ + ") format(\"woff\");\n}\n@font-face {\n  font-family: \"Uruz\";\n  font-weight: 700;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_13___ + ") format(\"woff\");\n}\n@font-face {\n  font-family: \"Uruz C\";\n  font-weight: 400;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_14___ + ") format(\"woff\");\n}\n@font-face {\n  font-family: \"Uruz C\";\n  font-weight: 500;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_15___ + ") format(\"woff\");\n}\n@font-face {\n  font-family: \"Uruz C\";\n  font-weight: 600;\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_16___ + ") format(\"woff\");\n}\n@font-face {\n  font-family: \"Manufab\";\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_17___ + ") format(\"woff\");\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_18___ + ") format(\"woff2\");\n}\n@font-face {\n  font-family: \"Icon\";\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_19___ + ") format(\"woff\");\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_20___ + ") format(\"woff2\");\n}", "",{"version":3,"sources":["webpack://./src/styles/font-face.scss"],"names":[],"mappings":"AAOE;EACE,oBAAA;EACA,gBAAA;EACA,2DAAA;EACA,4DAAA;AANJ;AAEE;EACE,oBAAA;EACA,gBAAA;EACA,2DAAA;EACA,4DAAA;AAAJ;AAJE;EACE,oBAAA;EACA,gBAAA;EACA,2DAAA;EACA,4DAAA;AAMJ;AAVE;EACE,oBAAA;EACA,gBAAA;EACA,2DAAA;EACA,4DAAA;AAYJ;AAhBE;EACE,oBAAA;EACA,gBAAA;EACA,2DAAA;EACA,4DAAA;AAkBJ;AATE;EACE,mBAAA;EACA,gBAAA;EACA,4DAAA;AAWJ;AAdE;EACE,mBAAA;EACA,gBAAA;EACA,4DAAA;AAgBJ;AAnBE;EACE,mBAAA;EACA,gBAAA;EACA,4DAAA;AAqBJ;AAxBE;EACE,mBAAA;EACA,gBAAA;EACA,4DAAA;AA0BJ;AAlBE;EACE,qBAAA;EACA,gBAAA;EACA,4DAAA;AAoBJ;AAvBE;EACE,qBAAA;EACA,gBAAA;EACA,4DAAA;AAyBJ;AA5BE;EACE,qBAAA;EACA,gBAAA;EACA,4DAAA;AA8BJ;AA3BA;EACE,sBAAA;EACA,4DAAA;EACA,6DAAA;AA6BF;AA3BA;EACE,mBAAA;EACA,4DAAA;EACA,6DAAA;AA6BF","sourcesContent":["$theia-weights: \n  ('100')\n  ('200')\n  ('300')\n  ('400')\n  ('500');\n@each $weight in $theia-weights {\n  @font-face {\n    font-family: 'Theia';\n    font-weight: #{$weight};\n    src: url('../fonts/Theia0.2-#{$weight}.woff') format('woff');\n    src: url('../fonts/Theia0.2-#{$weight}.woff2') format('woff2');\n  }\n}\n$uruz-weights: \n  ('400')\n  ('500')\n  ('600')\n  ('700');\n@each $weight in $uruz-weights {\n  @font-face {\n    font-family: 'Uruz';\n    font-weight: #{$weight};\n    src: url('../fonts/Ergata-Ymirsson#{$weight}.woff') format('woff');\n  }\n}\n$uruz-c-weights: \n  ('400')\n  ('500')\n  ('600');\n@each $weight in $uruz-c-weights {\n  @font-face {\n    font-family: 'Uruz C';\n    font-weight: #{$weight};\n    src: url('../fonts/Ergata-Ymirsson#{$weight}C.woff') format('woff');\n  }\n}\n@font-face {\n  font-family: 'Manufab';\n  src: url('../fonts/ManufabGX.woff') format('woff');\n  src: url('../fonts/ManufabGX.woff2') format('woff2');\n}\n@font-face {\n  font-family: 'Icon';\n  src: url('../fonts/IconGX.woff') format('woff');\n  src: url('../fonts/IconGX.woff2') format('woff2');\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js":
/*!************************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/cssWithMappingToString.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.exports = function cssWithMappingToString(item) {
  var _item = _slicedToArray(item, 4),
      content = _item[1],
      cssMapping = _item[3];

  if (typeof btoa === "function") {
    // eslint-disable-next-line no-undef
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== "string") {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  }

  if (options.hash) {
    // eslint-disable-next-line no-param-reassign
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
( function( global, factory ) {

	"use strict";

	if (  true && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur as it's already being fired
		// in leverageNative.
		_default: function() {
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ "./src/styles/core.scss":
/*!******************************!*\
  !*** ./src/styles/core.scss ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_core_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./core.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/core.scss");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_core_scss__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_core_scss__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "./src/styles/font-face.scss":
/*!***********************************!*\
  !*** ./src/styles/font-face.scss ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_font_face_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./font-face.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/font-face.scss");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_font_face_scss__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_font_face_scss__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : 0;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./src/fonts/Ergata-Ymirsson400.woff":
/*!*******************************************!*\
  !*** ./src/fonts/Ergata-Ymirsson400.woff ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/Ergata-Ymirsson400C.woff":
/*!********************************************!*\
  !*** ./src/fonts/Ergata-Ymirsson400C.woff ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,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");

/***/ }),

/***/ "./src/fonts/Ergata-Ymirsson500.woff":
/*!*******************************************!*\
  !*** ./src/fonts/Ergata-Ymirsson500.woff ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/Ergata-Ymirsson500C.woff":
/*!********************************************!*\
  !*** ./src/fonts/Ergata-Ymirsson500C.woff ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/Ergata-Ymirsson600.woff":
/*!*******************************************!*\
  !*** ./src/fonts/Ergata-Ymirsson600.woff ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/Ergata-Ymirsson600C.woff":
/*!********************************************!*\
  !*** ./src/fonts/Ergata-Ymirsson600C.woff ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/Ergata-Ymirsson700.woff":
/*!*******************************************!*\
  !*** ./src/fonts/Ergata-Ymirsson700.woff ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/IconGX.woff":
/*!*******************************!*\
  !*** ./src/fonts/IconGX.woff ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,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");

/***/ }),

/***/ "./src/fonts/IconGX.woff2":
/*!********************************!*\
  !*** ./src/fonts/IconGX.woff2 ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff2;base64,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");

/***/ }),

/***/ "./src/fonts/ManufabGX.woff":
/*!**********************************!*\
  !*** ./src/fonts/ManufabGX.woff ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/ManufabGX.woff2":
/*!***********************************!*\
  !*** ./src/fonts/ManufabGX.woff2 ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff2;base64,");

/***/ }),

/***/ "./src/fonts/Theia0.2-100.woff":
/*!*************************************!*\
  !*** ./src/fonts/Theia0.2-100.woff ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,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");

/***/ }),

/***/ "./src/fonts/Theia0.2-100.woff2":
/*!**************************************!*\
  !*** ./src/fonts/Theia0.2-100.woff2 ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff2;base64,");

/***/ }),

/***/ "./src/fonts/Theia0.2-200.woff":
/*!*************************************!*\
  !*** ./src/fonts/Theia0.2-200.woff ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/Theia0.2-200.woff2":
/*!**************************************!*\
  !*** ./src/fonts/Theia0.2-200.woff2 ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff2;base64,");

/***/ }),

/***/ "./src/fonts/Theia0.2-300.woff":
/*!*************************************!*\
  !*** ./src/fonts/Theia0.2-300.woff ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/Theia0.2-300.woff2":
/*!**************************************!*\
  !*** ./src/fonts/Theia0.2-300.woff2 ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff2;base64,");

/***/ }),

/***/ "./src/fonts/Theia0.2-400.woff":
/*!*************************************!*\
  !*** ./src/fonts/Theia0.2-400.woff ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/Theia0.2-400.woff2":
/*!**************************************!*\
  !*** ./src/fonts/Theia0.2-400.woff2 ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff2;base64,");

/***/ }),

/***/ "./src/fonts/Theia0.2-500.woff":
/*!*************************************!*\
  !*** ./src/fonts/Theia0.2-500.woff ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff;base64,");

/***/ }),

/***/ "./src/fonts/Theia0.2-500.woff2":
/*!**************************************!*\
  !*** ./src/fonts/Theia0.2-500.woff2 ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("data:font/woff2;base64,");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ $render)
/* harmony export */ });
/* harmony import */ var _styles_core_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/core.scss */ "./src/styles/core.scss");
/* harmony import */ var _styles_font_face_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/font-face.scss */ "./src/styles/font-face.scss");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ui_$macros__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui/$macros */ "./src/js/ui/$macros.js");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core */ "./src/js/core/index.js");
/* harmony import */ var _core_Session__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/Session */ "./src/js/core/Session.js");
/* harmony import */ var _core_extensions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./core/extensions */ "./src/js/core/extensions/index.js");
/* harmony import */ var _core_extensions_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./core/extensions/array */ "./src/js/core/extensions/array.js");
// STYLE


// UI


// CORE





(0,_core_extensions__WEBPACK_IMPORTED_MODULE_6__.default)(Array).with(_core_extensions_array__WEBPACK_IMPORTED_MODULE_7__._contains, _core_extensions_array__WEBPACK_IMPORTED_MODULE_7__._comprises, _core_extensions_array__WEBPACK_IMPORTED_MODULE_7__._overlaps, _core_extensions_array__WEBPACK_IMPORTED_MODULE_7__._excludes)

const session = new _core__WEBPACK_IMPORTED_MODULE_4__.Session()

jquery__WEBPACK_IMPORTED_MODULE_2___default()(() => {
  // session.goToNextState()
  // console.log(session)
  // session.goToNextState()
  // console.log(session.state.id)
  // session.addPizza()
  // console.log(session.order[session.order.length - 1])
  // session.changeView(0)
  $render(session)

  // session.state.view
  // session.state.otherViews
  // session.changeView(`list`)
  // session.state.view
  // session.state.otherViews
  // session.order[0].processChange()
  // session.order[0].removeTopping(`Mozzarella`)
  // session.order[0].chooseOption(`crust`, 3)
  // session.order[0].chooseOption(`sauce`, 3)
  // session.order[0].chooseOption(`toppings`, 4)
})

function $render(session) {
  ;(0,_ui_$macros__WEBPACK_IMPORTED_MODULE_3__.$wipe)()
  if (!session) session = new _core__WEBPACK_IMPORTED_MODULE_4__.Session()
  switch (session.state.id) {
    case _core_Session__WEBPACK_IMPORTED_MODULE_5__.WELCOME:
      ;(0,_ui_$macros__WEBPACK_IMPORTED_MODULE_3__.$printWelcome)(session)
      break
    case _core_Session__WEBPACK_IMPORTED_MODULE_5__.ORDER_IN_PROGRESS:
      switch (typeof session.state.view) {
        case `string`:
          ;(0,_ui_$macros__WEBPACK_IMPORTED_MODULE_3__.$printOrderList)(session)
          break
        case `number`:
          ;(0,_ui_$macros__WEBPACK_IMPORTED_MODULE_3__.$printPizzaEditor)(session)
          break
        default:
      }
      break
    case _core_Session__WEBPACK_IMPORTED_MODULE_5__.ORDER_UNDER_REVIEW:
      ;(0,_ui_$macros__WEBPACK_IMPORTED_MODULE_3__.$printReviewer)(session)
      break
    case _core_Session__WEBPACK_IMPORTED_MODULE_5__.ORDER_COMPLETE:
      ;(0,_ui_$macros__WEBPACK_IMPORTED_MODULE_3__.$printFarewell)(session)
      break
    default:
      break
  }
}


/***/ }),

/***/ "./src/js/core/Pizza.js":
/*!******************************!*\
  !*** ./src/js/core/Pizza.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Pizza)
/* harmony export */ });
/* harmony import */ var _data_priceSheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data/priceSheet */ "./src/js/core/data/priceSheet.js");
/* eslint func-names: 0 */
/* eslint no-case-declarations: 0 */
/* eslint no-global-assign: 0 */



function Pizza() {
  this.id = -1
  // id -1 is a signal that this pizza
  // has not been added to an order
  this.name = `The Classic`
  this.summary = `Medium pizza with tomato sauce and mozzarella.`
  this.price = 20
  this.chosen = {
    size: 1,
    crust: 0,
    sauce: 0,
    toppings: [`Mozzarella`],
  }
  this.options = {
    size: [`S`, `M`, `L`],
    crust: [`Regular`, `Thin Crust`, `Deep Dish`, `None`],
    sauce: [`Tomato`, `Pesto`, `Alfredo`, `None`],
    toppings: [
      `Olive`,
      `Onion`,
      `Pepperoni`,
      `Pineapple`,
      `Razor Blades`,
      `Sausage`,
      `Spinach`,
      `Yak`,
    ],
  }
}

Pizza.prototype.chooseOption = function (key, idx) {
  switch (key) {
    case `size`:
    case `crust`:
    case `sauce`:
      this.chosen[key] = idx
      break
    case `toppings`:
      this.addTopping(idx)
      break
    default: throw new Error(`not a valid pizza option: '${key}'`)
  }
  this.processChange()
}

Pizza.prototype.addTopping = function (idx) {
  const chosenTopping = this.options.toppings.splice(idx, 1)
  this.chosen.toppings.push(...chosenTopping)
}

Pizza.prototype.removeTopping = function (idx) {
  const chosenTopping = this.chosen.toppings.splice(idx, 1)
  this.options.toppings.push(chosenTopping[0])
  this.options.toppings.sort()
  this.processChange()
}

Pizza.prototype.processChange = function () {
  this.size = this.options.size[this.chosen.size]
  this.crust = this.options.crust[this.chosen.crust]
  this.sauce = this.options.sauce[this.chosen.sauce]
  this.tallyPrice()
  this.summarize()
  this.rename()
}

Pizza.prototype.tallyPrice = function () {
  const sizePrice = _data_priceSheet__WEBPACK_IMPORTED_MODULE_0__.default.size[this.size]
  const crustPrice = _data_priceSheet__WEBPACK_IMPORTED_MODULE_0__.default.crust[this.crust]
  const saucePrice = _data_priceSheet__WEBPACK_IMPORTED_MODULE_0__.default.sauce[this.sauce]
  let toppingsPrice = 0
  for (let i = 0; i < this.chosen.toppings.length; i++) {
    const chosenTopping = this.chosen.toppings[i]
    toppingsPrice += _data_priceSheet__WEBPACK_IMPORTED_MODULE_0__.default.toppings[chosenTopping]
  }
  const pizzaPrice = sizePrice + crustPrice + saucePrice + toppingsPrice
  this.price = pizzaPrice
}

Pizza.prototype.summarize = function () {
  const adjective = (() => {
    switch (this.size) {
      case `S`: return `Small`
      case `M`: return `Medium`
      case `L`: return `Large`
      default: throw new Error(`strange size: ${this.size}`)
    }
  })()
  const noun = (() => {
    switch (this.crust) {
      case `Regular`: return `pizza with`
      case `Thin Crust`: return `thin-crust pizza with`
      case `Deep Dish`: return `deep-dish pizza with`
      case `None`: return `helping of`
      default: throw new Error(`strange crust: ${this.crust}`)
    }
  })()
  const listHead = (() => {
    switch (this.sauce) {
      case `Tomato`: return `tomato sauce`
      case `Pesto`: return `pesto`
      case `Alfredo`: return `alfredo sauce`
      case `None`: return ``
      default: throw new Error(`strange sauce: ${this.sauce}`)
    }
  })()
  let chosenToppings = [...this.chosen.toppings]
  chosenToppings = chosenToppings.map(topping => topping.toLowerCase())
  if (listHead) chosenToppings.unshift(listHead)
  const list = (() => {
    switch (chosenToppings.length) {
      case 0: return `nothing`
      case 1: return chosenToppings[0]
      case 2: return `${chosenToppings[0]} and ${chosenToppings[1]}`
      default:
        const lastTopping = chosenToppings.pop(listHead)
        const commaJoinedToppings = chosenToppings.join(`, `)
        return `${commaJoinedToppings}, and ${lastTopping}`
    }
  })()
  this.summary = `${adjective} ${noun} ${list}.`
}

Pizza.prototype.rename = function () {
  const specialName = ``
  const autoNameCoreDict = {
    'Regular': {
      'Tomato': { infix: `Classic` },
      'Pesto': { infix: `Gardener` },
      'Alfredo': { infix: `Gourmet` },
      'None': { prefix: `Open-faced`, suffix: `Pita` },
    },
    'Thin Crust': {
      'Tomato': { infix: `New Yorker` },
      'Pesto': { infix: `Luigi` },
      'Alfredo': { infix: `Mafioso` },
      'None': { prefix: `Huge`, infix: `Cracker` },
    },
    'Deep Dish': {
      'Tomato': { infix: `Mario` },
      'Pesto': { infix: `Shrek` },
      'Alfredo': { infix: `Royale` },
      'None': { prefix: `Bready`, infix: `Slab` },
    },
    'None': {
      'Tomato': { prefix: `Messy` },
      'Pesto': { prefix: `Mossy` },
      'Alfredo': { prefix: `Buttered` },
      'None': { suffix: `Extravaganza` },
    },
  }

  const autoNameCore = autoNameCoreDict[this.crust][this.sauce]
  const autoNameSupport = (() => {
    const chosen = this.chosen.toppings
    const lastChosen = chosen[chosen.length - 1]
    const nonVeganToppings = [`Mozzarella`, `Pepperoni`, `Sausage`]
    const veggieToppings = [`Olive`, `Onion`, `Spinach`]
    const meatToppings = [`Pepperoni`, `Sausage`]
    let prefix = `The`
    let infix = `Table`
    let suffix = ``

    if (lastChosen && lastChosen !== `Mozzarella`) {
      infix = lastChosen; suffix = `with ${lastChosen}`
    }
    if (chosen._excludes(`Mozzarella`)) {
      prefix = `Uncheesed`
    } else if (this.crust === `None`) { prefix = `Ooey-gooey` }
    if (chosen._excludes(nonVeganToppings)) { prefix = `Vegan` }

    if (chosen._overlaps(veggieToppings) > 1 && chosen._overlaps(meatToppings)) {
      prefix = `Super`; infix = `Combo`
    }
    if (chosen._overlaps(veggieToppings) > 1) {
      infix = `Veggie`; suffix = `with Veggies`
    }
    if (chosen._contains(meatToppings)) { infix = `Meat`; suffix = `with Meats` }
    if (chosen.includes(`Pineapple`)) { suffix = `(Island-Style)` }
    if (chosen.includes(`Razor Blades`)) {
      prefix = `Lethal`; infix = `Shrapnel`
      if (chosen.length > 2) { infix = `Garbage Pile` }
    }
    return { prefix, infix, suffix }
  })()

  if (specialName) {
    this.name = specialName
  } else {
    const { prefix, infix, suffix } = { ...autoNameSupport, ...autoNameCore }
    const autoName = `${prefix} ${infix} ${suffix}`
    this.name = autoName.trim()
  }
}


/***/ }),

/***/ "./src/js/core/Session.js":
/*!********************************!*\
  !*** ./src/js/core/Session.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WELCOME": () => (/* binding */ WELCOME),
/* harmony export */   "ORDER_IN_PROGRESS": () => (/* binding */ ORDER_IN_PROGRESS),
/* harmony export */   "ORDER_UNDER_REVIEW": () => (/* binding */ ORDER_UNDER_REVIEW),
/* harmony export */   "ORDER_COMPLETE": () => (/* binding */ ORDER_COMPLETE),
/* harmony export */   "SPLASH_SCREEN": () => (/* binding */ SPLASH_SCREEN),
/* harmony export */   "LIST": () => (/* binding */ LIST),
/* harmony export */   "default": () => (/* binding */ Session)
/* harmony export */ });
/* harmony import */ var _Pizza__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Pizza */ "./src/js/core/Pizza.js");
/* eslint func-names: 0 */



const WELCOME = `welcome`
const ORDER_IN_PROGRESS = `order-in-progress`
const ORDER_UNDER_REVIEW = `order-under-review`
const ORDER_COMPLETE = `order-complete`
const SPLASH_SCREEN = `splash-screen`
const LIST = `list`

function Session() {
  this.order = []
  this.idTicker = -1
  this.state = {
    id: WELCOME,
    view: SPLASH_SCREEN,
  }
  this.nextStates = [
    {
      id: ORDER_IN_PROGRESS,
      view: LIST,
      otherViews: [], // this will fill with the ids of your pizzas
      isUnfinished: true,
    },
    {
      id: ORDER_UNDER_REVIEW,
      view: LIST,
    },
    {
      id: ORDER_COMPLETE,
      view: SPLASH_SCREEN,
    },
  ]
}

Session.prototype.goToNextState = function () {
  const jobDone = !this.state.isUnfinished
  if (jobDone) {
    this.nextStates.push(this.state)
    this.state = this.nextStates.shift()
  }
}

Session.prototype.goToPrevState = function () {
  if (this.state.id !== `welcome`) {
    this.nextStates.unshift(this.state)
    this.state = this.nextStates.pop()
  }
}

Session.prototype.addToOrder = function (pizza) {
  const inWrongState = this.state.id !== ORDER_IN_PROGRESS
  if (inWrongState) throw new Error(`It's not time to add to your order.`)
  const thatsNoPizza = pizza?.constructor?.name !== `Pizza`
  if (thatsNoPizza) throw new Error(`Sir, this is a pizza restaurant.`)
  this.idTicker += 1
  pizza.id = this.idTicker
  this.order.push(pizza)
  this.state.otherViews.push(pizza.id)
  this.state.isUnfinished = false
}

Session.prototype.addPizza = function () {
  const pizza = new _Pizza__WEBPACK_IMPORTED_MODULE_0__.default()
  this.addToOrder(pizza)
}

Session.prototype.removeFromOrder = function (itemId) {
  const inWrongState = this.state.id !== ORDER_IN_PROGRESS
  if (inWrongState) throw new Error(`It's not time to edit your order.`)
  const idxOfRemoval = this.order.findIndex(item => item.id === itemId)
  if (idxOfRemoval === -1) throw new Error(`Can't find the item for deletion.`)
  this.order.splice(idxOfRemoval, 1)
  this.changeView(LIST)
  this.removeView(itemId)
  const orderNowEmpty = this.order.length === 0
  if (orderNowEmpty) this.state.isUnfinished = true
}

Session.prototype.changeView = function (viewId) {
  const isCurrentView = this.state.view === viewId
  if (isCurrentView) return
  const didntFindOtherView = !this.state.otherViews?.includes(viewId)
  if (didntFindOtherView) throw new Error(`desired view does not exist`)
  this.state.otherViews.unshift(this.state.view)
  const idxOfNewView = this.state.otherViews.indexOf(viewId)
  this.state.otherViews.splice(idxOfNewView, 1)
  this.state.view = viewId
}

Session.prototype.removeView = function (viewId) {
  if (!this.state.otherViews) throw new Error(`desired view does not exist`)
  const idxOfRemoval = this.state.otherViews.indexOf(viewId)
  if (idxOfRemoval === -1) throw new Error(`view for deletion not found`)
  this.state.otherViews.splice(idxOfRemoval, 1)
}

Session.prototype.getTotalPrice = function () {
  let total = 0
  this.order.forEach(item => {
    total += item.price
  })
  return total
}


/***/ }),

/***/ "./src/js/core/data/priceSheet.js":
/*!****************************************!*\
  !*** ./src/js/core/data/priceSheet.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  size: {
    'S': -2,
    'M': 0,
    'L': 2,
  },
  crust: {
    'Regular': 12,
    'Thin Crust': 14,
    'Deep Dish': 14,
    'None': 0,
  },
  sauce: {
    'Tomato': 4,
    'Pesto': 5,
    'Alfredo': 6,
    'None': 0,
  },
  toppings: {
    'Mozzarella': 4,
    'Olive': 1,
    'Onion': 1,
    'Pepperoni': 2,
    'Pineapple': 2,
    'Sausage': 1,
    'Spinach': 1,
    'Razor Blades': 3,
    'Yak': 600,
  },
});


/***/ }),

/***/ "./src/js/core/extensions/array.js":
/*!*****************************************!*\
  !*** ./src/js/core/extensions/array.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_contains": () => (/* binding */ _contains),
/* harmony export */   "_comprises": () => (/* binding */ _comprises),
/* harmony export */   "_overlaps": () => (/* binding */ _overlaps),
/* harmony export */   "_excludes": () => (/* binding */ _excludes)
/* harmony export */ });
/* eslint func-names: 0 */
/* eslint no-restricted-syntax: 0 */

const _contains = function (...args) {
  const maybeArray = args[0]
  const elements = Array.isArray(maybeArray) ? maybeArray : args
  for (const element of elements) {
    if (!this.includes(element)) return false
  }
  return true
}

const _comprises = function (...args) {
  const maybeArray = args[0]
  const queryElements = Array.isArray(maybeArray) ? maybeArray : args
  for (const queryElement of queryElements) {
    if (!this.includes(queryElement)) return false
  }
  for (const contentElement of this) {
    if (!queryElements.includes(contentElement)) return false
  }
  return true
}

const _overlaps = function (...args) {
  const maybeArray = args[0]
  const elements = Array.isArray(maybeArray) ? maybeArray : args
  let incidences = 0
  for (const element of elements) {
    if (this.includes(element)) incidences += 1
  }
  return incidences
}

const _excludes = function (...args) {
  const maybeArray = args[0]
  const elements = Array.isArray(maybeArray) ? maybeArray : args
  let incidences = 0
  for (const element of elements) {
    if (this.includes(element)) incidences += 1
  }
  return !incidences
}




/***/ }),

/***/ "./src/js/core/extensions/index.js":
/*!*****************************************!*\
  !*** ./src/js/core/extensions/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* eslint func-names: 0 */
/* eslint no-extend-native: 0 */
/* eslint no-restricted-syntax: 0 */

const extend = Prototype => new Extension(Prototype)

function Extension(Prototype) {
  this.scope = Prototype
}

Extension.prototype.with = function (...methods) {
  for (const method of methods) {
    this.scope.prototype[method.name] = method
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (extend);


/***/ }),

/***/ "./src/js/core/index.js":
/*!******************************!*\
  !*** ./src/js/core/index.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Session": () => (/* reexport safe */ _Session__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "Pizza": () => (/* reexport safe */ _Pizza__WEBPACK_IMPORTED_MODULE_1__.default)
/* harmony export */ });
/* harmony import */ var _Session__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Session */ "./src/js/core/Session.js");
/* harmony import */ var _Pizza__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Pizza */ "./src/js/core/Pizza.js");
/* eslint func-names: 0 */







/***/ }),

/***/ "./src/js/ui/$farewell.js":
/*!********************************!*\
  !*** ./src/js/ui/$farewell.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$makeFarewell": () => (/* binding */ $makeFarewell),
/* harmony export */   "$listenFarewell": () => (/* binding */ $listenFarewell)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ "./src/js/app.js");
/* eslint import/no-cycle: 0 */




function $makeFarewell() {
  const $bg = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<div/>`)
    .attr(`id`, `bg`)

  const $main = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<main/>`)
    .attr(`id`, `welcome`)
  const $success = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<h1/>`)
    .text(`Success!`)
  $main.append([$success])

  const $footer = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<footer/>`)
  const $button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .text(`Start Over`)
    .addClass(`reset`)
    .attr(`id`, `start-over`)
  $footer.append($button)

  return [$bg, $main, $footer]
}

function $listenFarewell() {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#start-over`).on(`click`, () => {
    (0,_app__WEBPACK_IMPORTED_MODULE_1__.default)()
  })
}


/***/ }),

/***/ "./src/js/ui/$macros.js":
/*!******************************!*\
  !*** ./src/js/ui/$macros.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$wipe": () => (/* binding */ $wipe),
/* harmony export */   "$printWelcome": () => (/* binding */ $printWelcome),
/* harmony export */   "$printOrderList": () => (/* binding */ $printOrderList),
/* harmony export */   "$printPizzaEditor": () => (/* binding */ $printPizzaEditor),
/* harmony export */   "$printReviewer": () => (/* binding */ $printReviewer),
/* harmony export */   "$printFarewell": () => (/* binding */ $printFarewell)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _$welcome__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./$welcome */ "./src/js/ui/$welcome.js");
/* harmony import */ var _$orderList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./$orderList */ "./src/js/ui/$orderList.js");
/* harmony import */ var _$pizzaEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./$pizzaEditor */ "./src/js/ui/$pizzaEditor.js");
/* harmony import */ var _$reviewer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./$reviewer */ "./src/js/ui/$reviewer.js");
/* harmony import */ var _$farewell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./$farewell */ "./src/js/ui/$farewell.js");









function $wipe() { jquery__WEBPACK_IMPORTED_MODULE_0___default()(`body`).empty() }
function $print($content) { jquery__WEBPACK_IMPORTED_MODULE_0___default()(`body`).append($content) }

function $printWelcome(session) {
  const $welcome = (0,_$welcome__WEBPACK_IMPORTED_MODULE_1__.$makeWelcome)()
  $print($welcome)
  ;(0,_$welcome__WEBPACK_IMPORTED_MODULE_1__.$listenWelcome)(session)
}
function $printOrderList(session) {
  const $orderList = (0,_$orderList__WEBPACK_IMPORTED_MODULE_2__.$makeOrderList)(session)
  $print($orderList)
  ;(0,_$orderList__WEBPACK_IMPORTED_MODULE_2__.$listenOrderList)(session)
}
function $printPizzaEditor(session) {
  const item = session.order[session.state.view]
  const $pizzaEditor = (0,_$pizzaEditor__WEBPACK_IMPORTED_MODULE_3__.$makePizzaEditor)(session, item)
  $print($pizzaEditor)
  ;(0,_$pizzaEditor__WEBPACK_IMPORTED_MODULE_3__.$listenPizzaEditor)(session, item)
}
function $printReviewer(session) {
  const $orderList = (0,_$reviewer__WEBPACK_IMPORTED_MODULE_4__.$makeReviewer)(session)
  $print($orderList)
  ;(0,_$reviewer__WEBPACK_IMPORTED_MODULE_4__.$listenReviewer)(session)
}
function $printFarewell(session) {
  const $farewell = (0,_$farewell__WEBPACK_IMPORTED_MODULE_5__.$makeFarewell)(session)
  $print($farewell)
  ;(0,_$farewell__WEBPACK_IMPORTED_MODULE_5__.$listenFarewell)(session)
}


/***/ }),

/***/ "./src/js/ui/$orderList.js":
/*!*********************************!*\
  !*** ./src/js/ui/$orderList.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$makeOrderList": () => (/* binding */ $makeOrderList),
/* harmony export */   "$listenOrderList": () => (/* binding */ $listenOrderList)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ "./src/js/app.js");
/* eslint import/no-cycle: 0 */




function $makeOrderList(session) {
  const $main = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<main/>`)
    .attr(`id`, `order-list`)

  const $overview = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<section/>`)
    .attr(`id`, `overview`)
  const $heading = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<h2/>`)
    .text(`Your Order`)
  const $price = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<p/>`)
    .text(`$${session.getTotalPrice()}`)
  $overview.append([$heading, $price])

  const $content = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<section/>`)
    .attr(`id`, `content`)
  const $orderItems = session.order.map(item => $makeOrderItem(item))
  const $newItemButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .addClass(`big next`)
    .text(`Add Pizza`)
    .attr(`id`, `add-pizza`)
  $content.append([...$orderItems, $newItemButton])

  $main.append([$overview, $content])

  const $footer = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<footer/>`)
  const $readyButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .addClass(`big next`)
    .text(`I'm Ready`)
    .attr(`id`, `next`)
    .attr(`disabled`, session.state.isUnfinished)
  $footer.append($readyButton)

  return [$main, $footer]
}

function $listenOrderList(session) {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#add-pizza`).on(`click`, () => {
    session.addPizza()
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#next`).on(`click`, () => {
    session.goToNextState()
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`button.edit`).on(`click`, e => {
    const newViewId = parseInt(e.target.id, 10)
    session.changeView(newViewId)
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`button.delete`).on(`click`, e => {
    const idxOfRemoval = parseInt(e.target.id, 10)
    session.removeFromOrder(idxOfRemoval)
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
}

function $makeOrderItem(item) {
  const nameOfItem = item.name
  const $orderItem = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<section/>`)
  const $header = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<h4/>`)
    .text(nameOfItem)
  const $description = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<p/>`)
    .text(item.summary)
  const $price = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<p/>`)
    .text(`$${item.price}`)
  const $editButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .text(`Edit`)
    .addClass(`edit`)
    .attr(`id`, item.id)
  const $deleteButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .text(`Delete`)
    .addClass(`delete`)
    .attr(`id`, item.id)
  $orderItem.append([$header, $price, $description, $editButton, $deleteButton])
  return $orderItem
}


/***/ }),

/***/ "./src/js/ui/$pizzaEditor.js":
/*!***********************************!*\
  !*** ./src/js/ui/$pizzaEditor.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$makePizzaEditor": () => (/* binding */ $makePizzaEditor),
/* harmony export */   "$listenPizzaEditor": () => (/* binding */ $listenPizzaEditor)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ "./src/js/app.js");
/* eslint import/no-cycle: 0 */




const OPTIONS_GROUP_IDS = [`size`, `crust`, `sauce`]

function $makePizzaEditor(session, item) {
  const $main = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<main/>`)
    .attr(`id`, `order-list`)

  const $overview = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<section/>`)
    .attr(`id`, `overview`)
  const $heading = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<h2/>`)
    .text(`Customize Your Pizza`)
    .addClass(`center`)
  const $imgWrapper = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<div/>`)
    .addClass(`img-wrap`)
  const $subheading = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<h3/>`)
    .text(item.name)
    .addClass(`center`)
  const $price = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<p/>`)
    .text(`$${item.price}`)
  const $description = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<p/>`)
    .text(item.summary)
  $overview.append([$heading, $imgWrapper, $subheading, $description, $price])

  const $controls = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<section/>`)
    .attr(`id`, `controls`)
  const $radioGroups = OPTIONS_GROUP_IDS.map(radioGroupId => {
    const options = item.options[radioGroupId]
    const chosenIdx = item.chosen[radioGroupId]
    const role = `main`
    return $makeRadioGroup({ radioGroupId, options, chosenIdx, role })
  })
  const $toppingsControls = $makeToppingsControls(session, item)
  $controls.append(...$radioGroups, $toppingsControls)

  $main.append([$overview, $controls])

  const $cancelButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .addClass(`prev`)
    .text(`Cancel`)
    .attr(`id`, `cancel-changes`)
  const $applyButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .addClass(`next`)
    .text(`Apply`)
    .attr(`id`, `apply-changes`)
  const $footer = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<footer/>`)
    .append($cancelButton, $applyButton)

  return [$main, $footer]
}

function $listenPizzaEditor(session, item) {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#add-pizza`).on(`click`, () => {
    session.addPizza()
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#done`).on(`click`, () => {
    session.goToNextState()
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`[type='radio'].main`).on(`click`, e => {
    const key = e.target.name
    const idx = parseInt(e.target.value, 10)
    item.chooseOption(key, idx)
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`button#apply-changes`).on(`click`, () => {
    session.changeView(`list`)
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`button#cancel-changes`).on(`click`, () => {
    session.changeView(`list`)
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`button.delete-topping`).on(`click`, e => {
    const targetItem = parseInt(e.target.value, 10)
    item.removeTopping(targetItem)
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`button#open-topping-options`).on(`click`, () => {
    session.state.toppingOptionsIsOpen = true
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`button#cancel-new-topping`).on(`click`, () => {
    session.state.toppingOptionsIsOpen = false
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`[type='radio'].select-new`).on(`click`, e => {
    const idx = parseInt(e.target.value, 10)
    item.cachedToppingChoice = idx
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`button#confirm-new-topping`).on(`click`, () => {
    session.state.toppingOptionsIsOpen = false
    item.chooseOption(`toppings`, item.cachedToppingChoice)
    delete item.cachedToppingChoice
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
}

function $makeToppingsControls(session, item) {
  const $controlGroup = $makeControlGroup(`Toppings`)
  const $chosenToppings = item.chosen.toppings.map((topping, idx) => {
    const $chosenTopping = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<span/>`)
      .addClass(`control-cluster`)
    const $name = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<span/>`)
      .text(topping)
    const $deleteToppingButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
      .text(`x`)
      .attr(`value`, idx)
      .addClass(`delete-topping`)
    return $chosenTopping.append($name, $deleteToppingButton)
  })
  const $unchosenToppings = session.state.toppingOptionsIsOpen
    ? (() => {
      const $optionsStrip = $makeStrip(`Toppings`)
      const $cancelButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
        .text(`x`).addClass(`icon`)
        .attr(`id`, `cancel-new-topping`)
      const $horizontalScroller = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<div/>`)
        .addClass(`horizontal-scroller`)
      const $radioButtons = $makeRadioButtons({
        radioGroupId: `select-new-topping`,
        options: item.options.toppings,
        chosenIdx: item.cachedToppingChoice,
        role: `select-new`,
      })
      const $confirmButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
        .text(`c`).addClass(`icon`)
        .attr(`id`, `confirm-new-topping`)
      $horizontalScroller.append($radioButtons)
      $optionsStrip.append($cancelButton, $horizontalScroller, $confirmButton)
      return $optionsStrip
    })()
    : (() => {
      const $addToppingButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
        .text(`Add Topping`)
        .attr(`id`, `open-topping-options`)
      return $addToppingButton
    })()
  return $controlGroup.append($chosenToppings, $unchosenToppings)
}

function $makeRadioGroup({ radioGroupId, options, chosenIdx, role }) {
  const groupName = radioGroupId.replace(/^\w/, c => c.toUpperCase())
  const $controlGroup = $makeControlGroup(groupName)
  const $radioButtons = $makeRadioButtons(
    { options, chosenIdx, radioGroupId, role }
  )
  return $controlGroup.append($radioButtons)
}

function $makeStrip() {
  const $strip = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<div/>`)
    .addClass(`strip`)
  return $strip
}

function $makeControlGroup(groupName) {
  const $controlGroup = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<div/>`)
    .addClass(`control-group`)
  const $heading = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<h5/>`)
    .text(groupName)
  $controlGroup.append($heading)
  return $controlGroup
}

function $makeRadioButtons({ radioGroupId, options, chosenIdx, role }) {
  const $radioButtons = options.map((option, idx) => {
    const checked = idx === chosenIdx
    return $makeRadioButton({ option, idx, radioGroupId, checked, role })
  })
  return $radioButtons
}

function $makeRadioButton({ option, idx, radioGroupId, checked, role }) {
  const $radioButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<label/>`)
    .addClass(`radio`)
  const $border = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<div class='border'/>`)
  const $textSpan = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<span/>`).text(option)
  const $radioElement = $makeRadioElement({ radioGroupId, idx, checked, role })
  $radioButton.append($radioElement, $border, $textSpan)
  return $radioButton
}

function $makeRadioElement({ radioGroupId, idx, checked, role }) {
  const $radioElement = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<input type='radio'/>`)
    .attr(`name`, radioGroupId)
    .attr(`value`, idx)
    .attr(`checked`, checked)
    .addClass(role)
  return $radioElement
}


/***/ }),

/***/ "./src/js/ui/$reviewer.js":
/*!********************************!*\
  !*** ./src/js/ui/$reviewer.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$makeReviewer": () => (/* binding */ $makeReviewer),
/* harmony export */   "$listenReviewer": () => (/* binding */ $listenReviewer)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ "./src/js/app.js");
/* eslint import/no-cycle: 0 */




function $makeReviewer(session) {
  const $main = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<main/>`)
    .attr(`id`, `order-list`)

  const $overview = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<section/>`)
    .attr(`id`, `overview`)
  const $heading = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<h2/>`)
    .text(`Review Order`)
  const $price = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<p/>`)
    .text(`$${session.getTotalPrice()}`)
  $overview.append([$heading, $price])

  const $content = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<section/>`)
    .attr(`id`, `content`)
  const $orderItems = session.order.map(item => $makeOrderItem(item))
  $content.append(...$orderItems)

  $main.append([$overview, $content])

  const $footer = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<footer/>`)
  const $cancelButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .addClass(`big next`)
    .text(`Cancel`)
    .attr(`id`, `prev`)
  const $payButton = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .addClass(`big next`)
    .text(`Pay`)
    .attr(`id`, `next`)
  $footer.append($cancelButton, $payButton)

  return [$main, $footer]
}

function $listenReviewer(session) {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#prev`).on(`click`, () => {
    session.goToPrevState()
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#next`).on(`click`, () => {
    session.goToNextState()
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
}

function $makeOrderItem(item) {
  const nameOfItem = item.name
  const $orderItem = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<section/>`)
  const $header = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<h4/>`)
    .text(nameOfItem)
  const $description = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<p/>`)
    .text(item.summary)
  const $price = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<p/>`)
    .text(`$${item.price}`)
  $orderItem.append([$header, $price, $description])
  return $orderItem
}


/***/ }),

/***/ "./src/js/ui/$welcome.js":
/*!*******************************!*\
  !*** ./src/js/ui/$welcome.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$makeWelcome": () => (/* binding */ $makeWelcome),
/* harmony export */   "$listenWelcome": () => (/* binding */ $listenWelcome)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app */ "./src/js/app.js");
/* eslint import/no-cycle: 0 */




function $makeWelcome() {
  const $bg = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<div/>`)
    .attr(`id`, `bg`)

  const $main = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<main/>`)
    .attr(`id`, `welcome`)
  const $heading = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<h1/>`)
    .text(`Welcome to Grouchy Pizza`)
  const $subheading = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<p/>`)
    .text(`“Why don’t you order some god damn food and get out of here?”`)
  $main.append([$heading, $subheading])

  const $footer = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<footer/>`)
  const $button = jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<button/>`)
    .text(`I'm Hungry! Help!`)
    .addClass(`big next brand`)
    .attr(`id`, `next`)
  $footer.append($button)

  return [$bg, $main, $footer]
}

function $listenWelcome(session) {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(`#next`).on(`click`, () => {
    session.goToNextState()
    ;(0,_app__WEBPACK_IMPORTED_MODULE_1__.default)(session)
  })
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,